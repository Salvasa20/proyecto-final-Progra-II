// clase producto
*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package proyecto.pkgfinal;

/**
 *
 * @author santo
 */
public class producto {
    private int codigo;
    private String nombre;
    private double precio;
    private int inventario;

    public producto(int codigo, String nombre, double precio, int inventario) {
        this.codigo = codigo;
        this.nombre = nombre;
        this.precio = precio;
        this.inventario = inventario;
    }

    public producto() {
    }

    public int getCodigo() {
        return codigo;
    }

    public void setCodigo(int codigo) {
        this.codigo = codigo;
    }

    public String getNombre() {
        return nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public double getPrecio() {
        return precio;
    }

    public void setPrecio(double precio) {
        this.precio = precio;
    }

    public int getInventario() {
        return inventario;
    }

    public void setInventario(int inventario) {
        this.inventario = inventario;
    }
    
    
}

  /Clase base de datos
  *
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package proyecto.pkgfinal;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

/**
 *
 * @author santo
 */
public class Basedatosproductos {
    private HashMap<Integer, producto> listaproductos = new HashMap<>();

    public Basedatosproductos() {
        this.listaproductos.put(1, new producto(1, "manzanas", 8000, 65));
        this.listaproductos.put(2, new producto(2, "limones", 2300, 15));
        this.listaproductos.put(3, new producto(3, "granadillas", 2500, 38));
        this.listaproductos.put(4, new producto(4, "Arandanos", 14, 60));
        this.listaproductos.put(5, new producto(5, "Tomates", 4, 30));
        this.listaproductos.put(6, new producto(6, "Fresas", 15, 65));
        this.listaproductos.put(7, new producto(7, "Helado", 55, 44));
        this.listaproductos.put(8, new producto(8, "Galletas", 25, 8));
        this.listaproductos.put(9, new producto(9, "Chocolates", 50, 500));
        this.listaproductos.put(10, new producto(10, "Jamon", 25, 10));
        
    }
    public List<producto> getlistaproductos(){
        return new ArrayList<>(this.listaproductos.values());
    }
    public void setlistaproductos (HashMap<Integer, producto> listaproductos){
        this.listaproductos = listaproductos;
    }
    public boolean verificarExistencias(producto producto){
        return this.listaproductos.containsKey(producto.getCodigo());
        
    }
    public boolean verificarExistencias(String nombre){
        for (producto p : this.listaproductos.values()){
            if(nombre.toLowerCase().equals(p.getNombre().toLowerCase())){
                return true;
                
            }
        }
        return false;
    }
    public int ultimoCodigo(){
        int codigo = 0;
        for(producto p :this.listaproductos.values()){
            codigo = p.getCodigo();
        }
        return codigo;
    }
    public void agregar(producto p){
        this.listaproductos.put(p.getCodigo(), p);
    }
    public void actualizar(producto p){
        this.listaproductos.replace(p.getCodigo(), p);
    }
    public void borrar(producto p){
        this.listaproductos.remove(p.getCodigo());
    }
    public String Generarinforme(){
        List<producto> listaM = obtenerMayores();
        return listaM.get(0).getNombre()+" "+listaM.get(1).getNombre()+" "+listaM.get(2).getNombre();
    }
    private List<producto> obtenerMayores(){
        List<producto> lista = new ArrayList<>(this.listaproductos.values());
        List<producto> listaMayores = new ArrayList<>();
        for (int i = 0; i < 3; i++){
            producto p = new producto();
            for (producto pTemp : lista){
                if( pTemp.getPrecio() > p.getPrecio()){
                    p = pTemp;
         
                }
            }
            listaMayores.add(p);
            lista.remove(p);
            
        }
        return listaMayores;
    }
}

/ clase modelo de la tabla 
*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package proyecto.pkgfinal;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

/**
 *
 * @author santo
 */
public class Basedatosproductos {
    private HashMap<Integer, producto> listaproductos = new HashMap<>();

    public Basedatosproductos() {
        this.listaproductos.put(1, new producto(1, "manzanas", 8000, 65));
        this.listaproductos.put(2, new producto(2, "limones", 2300, 15));
        this.listaproductos.put(3, new producto(3, "granadillas", 2500, 38));
        this.listaproductos.put(4, new producto(4, "Arandanos", 14, 60));
        this.listaproductos.put(5, new producto(5, "Tomates", 4, 30));
        this.listaproductos.put(6, new producto(6, "Fresas", 15, 65));
        this.listaproductos.put(7, new producto(7, "Helado", 55, 44));
        this.listaproductos.put(8, new producto(8, "Galletas", 25, 8));
        this.listaproductos.put(9, new producto(9, "Chocolates", 50, 500));
        this.listaproductos.put(10, new producto(10, "Jamon", 25, 10));
        
    }
    public List<producto> getlistaproductos(){
        return new ArrayList<>(this.listaproductos.values());
    }
    public void setlistaproductos (HashMap<Integer, producto> listaproductos){
        this.listaproductos = listaproductos;
    }
    public boolean verificarExistencias(producto producto){
        return this.listaproductos.containsKey(producto.getCodigo());
        
    }
    public boolean verificarExistencias(String nombre){
        for (producto p : this.listaproductos.values()){
            if(nombre.toLowerCase().equals(p.getNombre().toLowerCase())){
                return true;
                
            }
        }
        return false;
    }
    public int ultimoCodigo(){
        int codigo = 0;
        for(producto p :this.listaproductos.values()){
            codigo = p.getCodigo();
        }
        return codigo;
    }
    public void agregar(producto p){
        this.listaproductos.put(p.getCodigo(), p);
    }
    public void actualizar(producto p){
        this.listaproductos.replace(p.getCodigo(), p);
    }
    public void borrar(producto p){
        this.listaproductos.remove(p.getCodigo());
    }
    public String Generarinforme(){
        List<producto> listaM = obtenerMayores();
        return listaM.get(0).getNombre()+" "+listaM.get(1).getNombre()+" "+listaM.get(2).getNombre();
    }
    private List<producto> obtenerMayores(){
        List<producto> lista = new ArrayList<>(this.listaproductos.values());
        List<producto> listaMayores = new ArrayList<>();
        for (int i = 0; i < 3; i++){
            producto p = new producto();
            for (producto pTemp : lista){
                if( pTemp.getPrecio() > p.getPrecio()){
                    p = pTemp;
         
                }
            }
            listaMayores.add(p);
            lista.remove(p);
            
        }
        return listaMayores;
    }
}


/ clase principal
*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyecto.pkgfinal;

import javax.swing.JOptionPane;

/**
 *
 * @author santo
 */
public class Principal extends javax.swing.JFrame {
    
    public int codigo;
    public String nombre;
    public double precio;
    public int inventario;
    producto productos [];
    Basedatosproductos bdProductos = new Basedatosproductos();
    

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        this.tbltabla.setModel(new TableModelProducto(bdProductos.getlistaproductos()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtInventario = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        btnInforme = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbltabla = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Tienda los Chorritos");

        jLabel2.setText("Agregar Productos");

        jLabel3.setText("Codigo:");

        txtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoActionPerformed(evt);
            }
        });

        jLabel4.setText("Nombre");

        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        jLabel5.setText("Precio");

        txtPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecioActionPerformed(evt);
            }
        });

        jLabel6.setText("Inventario");

        txtInventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInventarioActionPerformed(evt);
            }
        });

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnBorrar.setText("Borrar");
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        btnInforme.setText("Informe");
        btnInforme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInformeActionPerformed(evt);
            }
        });

        tbltabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tbltabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbltablaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbltabla);

        jLabel7.setText("Lista productos");

        jLabel8.setText("*Seleccione el dato de la tabla que desea Actualizar o Borrar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel1))
                                        .addGap(34, 34, 34))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtInventario, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addComponent(btnAgregar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnBorrar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnActualizar))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 39, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnInforme)
                .addGap(68, 68, 68))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtInventario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnBorrar)
                    .addComponent(btnActualizar))
                .addGap(24, 24, 24)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInforme)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {                                          
        limpiardatos();
        
    }                                         

    public boolean validardatos(){
        try {
            codigo = Integer.parseInt("".equals(txtCodigo.getText()) ? "0" : txtCodigo.getText());
            nombre = txtNombre.getText();
            precio = Double.parseDouble(txtPrecio.getText());
            inventario = Integer.parseInt(txtInventario.getText());
            return true;
            
        } catch (Exception e){
            return false;
        } 
    }
    
    public void limpiardatos(){
        this.txtCodigo.setText("");
        this.txtPrecio.setText("");
        this.txtNombre.setText("");
        this.txtInventario.setText("");
        
    }
    
    
    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void txtPrecioActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void txtInventarioActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
    }                                             

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {                                           
       if (validardatos()){
           if (bdProductos.verificarExistencias(nombre)){
               if (codigo == 0){
                   int codigoAux = bdProductos.ultimoCodigo() + 1;
                   bdProductos.agregar( new producto (codigoAux, nombre, precio,inventario));
                   this.tbltabla.setModel(new TableModelProducto(bdProductos.getlistaproductos()));
                   limpiardatos();
                   JOptionPane.showMessageDialog(this, "Producto agreegado existosamente", "Confirmacion", 2);
               }else{
                   JOptionPane.showMessageDialog(this, "Imposible agregar, Esta accion es permitida para Actualizar o borrar", "Advertencia", 2);
               }
           }else{
               JOptionPane.showMessageDialog(this, "El producto ya existe", "Advertencia", 2);
           }
       }else {
           JOptionPane.showMessageDialog(this, "Algunos de los valores digitados esta vacio o esta erroneo", "Advertencia", 2);
       }
    }                                          

    private void tbltablaMouseClicked(java.awt.event.MouseEvent evt) {                                      
      
        Producto producto = ((TableModelProducto)this.tbltabla.getModel()).detalle(this.tbltabla.getSelectedRow());
        this.txtCodigo.setText(String.copyValueOf(producto.getCodigo()));
        this.txtPrecio.setText(producto.getNombre() );
        this.txtNombre.setText(String.copyValueOf(producto.getPrecio()));
        this.txtInventario.setText(String.copyValueOf(producto.getInventario()));
        
    }                                     

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {                                              
      if ( validardatos()){
          bdProductos.actualizar (new producto (codigo, nombre, precio, inventario));
          this.tbltabla.setModel(new TableModelProducto(bdProductos.getlistaproductos()));
          limpiardatos();
          JOptionPane.showMessageDialog(this, "Producto actualizado exitosamente", "Confirmacion",1);
      }else{
          JOptionPane.showMessageDialog(this, "Algunos de los valores digitados esta vacio o esta erroneo", "Advertencia", 2);
      }
    }                                             

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {                                          
          if ( validardatos()){
          bdProductos.borrar (new producto (codigo, nombre, precio, inventario));
          this.tbltabla.setModel(new TableModelProducto(bdProductos.getlistaproductos()));
          limpiardatos();
          JOptionPane.showMessageDialog(this, "Producto eliminado exitosamente", "Confirmacion",1);
      }else{
          JOptionPane.showMessageDialog(this, "Algunos de los valores digitados esta vacio o esta erroneo", "Advertencia", 2);
      }
    }                                         

    private void btnInformeActionPerformed(java.awt.event.ActionEvent evt) {                                           
        JOptionPane.showMessageDialog(this,  bdProductos.Generarinforme(), "Advertencia", 2);
    }                                          

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnInforme;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tbltabla;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtInventario;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration                   
}

